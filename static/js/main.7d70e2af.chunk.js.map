{"version":3,"sources":["logo.svg","components/CodePen.js","App.js","reportWebVitals.js","index.js"],"names":["CodePen","props","state","this","type","script","document","createElement","src","async","body","appendChild","loadEmbed","UserLink","user","CodeSrc","hash","theme","editable","height","tab","title","PenLink","width","style","allowFullScreen","scrolling","frameBorder","loading","allowtransparency","href","className","data-height","data-theme-id","data-default-tab","data-user","data-slug-hash","data-editable","React","Component","defaultProps","App","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"gNAAe,G,MAAA,IAA0B,kC,2CCGnCA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,GAFI,E,qDAQnB,WACE,GAAwB,UAApBC,KAAKF,MAAMG,KAAkB,EAEb,WAChB,IAAMC,EAASC,SAASC,cAAc,UACtCF,EAAOG,IAHQ,+CAIfH,EAAOI,MAAQ,EACfH,SAASI,KAAKC,YAAYN,GAE5BO,M,oBAIJ,WACE,IAAMC,EAAQ,6BAAyBV,KAAKF,MAAMa,MAC5CC,EAAO,6BAAyBZ,KAAKF,MAAMa,KAApC,kBAAkDX,KAAKF,MAAMe,KAA7D,qBAA8Eb,KAAKF,MAAMgB,MAAzF,qBAA2Gd,KAAKF,MAAMiB,SAAtH,mBAAyIf,KAAKF,MAAMkB,OAApJ,wBAA0KhB,KAAKF,MAAMmB,IAArL,iBAAiMjB,KAAKF,MAAMa,KAA5M,sBAA8NX,KAAKF,MAAMe,KAAzO,sBAA2Pb,KAAKF,MAAMoB,OAAS,IACtRC,EAAO,UAAMT,EAAN,gBAAsBV,KAAKF,MAAMe,MAE9C,MAAwB,WAApBb,KAAKF,MAAMG,KAEX,yBACEmB,MAAOpB,KAAKF,MAAMsB,MAClBJ,OAAQhB,KAAKF,MAAMkB,OACnBK,MAAO,CAAED,MAAOpB,KAAKF,MAAMsB,MAAOJ,OAAQhB,KAAKF,MAAMkB,QACrDE,MAAOlB,KAAKF,MAAMoB,OAAS,GAC3Bb,IAAKO,EACLU,iBAAiB,EACjBC,UAAU,KACVC,YAAY,KACZC,QAAQ,OACRC,kBAAkB,OAVpB,yBAYc,mBAAGC,KAAMR,EAAT,SAAmBnB,KAAKF,MAAMoB,OAAS,KAZrD,eAYwE,oBAAGS,KAAMjB,EAAT,cAAqBV,KAAKF,MAAMa,QAZxG,QAYsH,mBAAGgB,KAAK,qBAAR,qBAZtH,OAkBF,oBACEC,UAAU,UACVC,cAAa7B,KAAKF,MAAMkB,OACxBc,gBAAe9B,KAAKF,MAAMgB,MAC1BiB,mBAAkB/B,KAAKF,MAAMmB,IAC7Be,YAAWhC,KAAKF,MAAMa,KACtBsB,iBAAgBjC,KAAKF,MAAMe,KAC3BqB,gBAAelC,KAAKF,MAAMiB,SAC1BM,MAAO,CAAED,MAAOpB,KAAKF,MAAMsB,OAR7B,yBAUc,mBAAGO,KAAMR,EAAT,SAAmBnB,KAAKF,MAAMoB,OAAS,KAVrD,eAUwE,oBAAGS,KAAMjB,EAAT,cAAqBV,KAAKF,MAAMa,QAVxG,QAUsH,mBAAGgB,KAAK,qBAAR,qBAVtH,W,GA/CgBQ,IAAMC,WA2E5BvC,EAAQwC,aAAe,CACrBpC,KAAM,SACNmB,MAAO,OACPJ,OAAQ,MACRF,MAAO,QACPC,UAAU,EACVE,IAAK,UAGQpB,QC9DAyC,MApBf,WACE,OACE,qBAAKV,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKvB,IAAKkC,EAAMX,UAAU,WAAWY,IAAI,SACzC,mBAAGZ,UAAU,SAAb,uCAGA,qBAAKA,UAAU,cAAf,SACE,cAAC,EAAD,CACEjB,KAAK,WACLE,KAAK,UACLC,MAAM,kBCLH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASkD,eAAe,SAM1BZ,M","file":"static/js/main.7d70e2af.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react'\nimport PropTypes from 'prop-types'\n\nclass CodePen extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  /**\n   * when type is embed, load embed/ei.js first.\n   */\n  componentDidMount() {\n    if (this.props.type === 'embed') {\n      const EMBED_JS = 'https://static.codepen.io/assets/embed/ei.js'\n      const loadEmbed = () => {\n        const script = document.createElement('script');\n        script.src = EMBED_JS;\n        script.async = 1;\n        document.body.appendChild(script);\n      }\n      loadEmbed();\n    }\n  }\n\n  render() {\n    const UserLink = `https://codepen.io/${this.props.user}`\n    const CodeSrc = `https://codepen.io/${this.props.user}/embed/${this.props.hash}?theme-id=${this.props.theme}&editable=${this.props.editable}&height=${this.props.height}&default-tab=${this.props.tab}&user=${this.props.user}&slug-hash=${this.props.hash}&pen-title=${this.props.title || ''}`\n    const PenLink = `${UserLink}/pen/${this.props.hash}`\n\n    if (this.props.type === 'iframe') {\n      return (\n        <iframe\n          width={this.props.width}\n          height={this.props.height}\n          style={{ width: this.props.width, height: this.props.height }}\n          title={this.props.title || ''}\n          src={CodeSrc}\n          allowFullScreen={true}\n          scrolling=\"no\"\n          frameBorder=\"no\"\n          loading=\"lazy\"\n          allowtransparency=\"true\"\n        >\n          See the Pen <a href={PenLink}>{this.props.title || ''}</a> by Leedom (<a href={UserLink}>@{this.props.user}</a>) on <a href='https://codepen.io'>CodePen</a>.\n        </iframe>\n      )\n    }\n\n    return (\n      <p\n        className=\"codepen\"\n        data-height={this.props.height}\n        data-theme-id={this.props.theme}\n        data-default-tab={this.props.tab}\n        data-user={this.props.user}\n        data-slug-hash={this.props.hash}\n        data-editable={this.props.editable}\n        style={{ width: this.props.width }}\n      >\n        See the Pen <a href={PenLink}>{this.props.title || ''}</a> by Leedom (<a href={UserLink}>@{this.props.user}</a>) on <a href='https://codepen.io'>CodePen</a>.\n      </p>\n    )\n  }\n}\n\nCodePen.propTypes = {\n  type: PropTypes.oneOf(['iframe', 'embed']),\n  user: PropTypes.string.isRequired,\n  hash: PropTypes.string.isRequired,\n  width: PropTypes.string,\n  height: PropTypes.string,\n  title: PropTypes.string,\n  theme: PropTypes.string,\n  editable: PropTypes.bool,\n  tab: PropTypes.oneOf(['html,result', 'css,result', 'js,result', 'result'])\n}\n\nCodePen.defaultProps = {\n  type: 'iframe',\n  width: '100%',\n  height: '400',\n  theme: 'light', \n  editable: true,\n  tab: 'result'\n}\n\nexport default CodePen\n","import logo from './logo.svg';\nimport './App.css';\nimport CodePen from './components/CodePen'\n// import CodePen from 'react-codepen-box'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"coding\">\n          Leedom is learning React.\n        </p>\n        <div className=\"codepen-box\">\n          <CodePen\n            user=\"leedom92\"\n            hash=\"gOLvgRe\"\n            theme=\"39028\"\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}